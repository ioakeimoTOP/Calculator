@mixin subgrid($rows, $columns) {
  display: grid;
  gap: inherit;
  place-items: center;
  grid-template: repeat($rows, 1fr) / repeat($columns, 1fr);
}

.calculator {
  font-size: clamp(1rem, 5vmin, 1.75rem);
  font-weight: bold;

  --gap: 0.5em;
  --border-radius: 1em;

  width: min(600px, 80%);
  height: min-content;
  padding: var(--gap);
  border-radius: var(--border-radius);
  box-shadow: 0 0 1em 0.05em var(--text);
  background: var(--accent-surface);

  display: grid;
  gap: var(--gap);
  grid-template-areas:
    'screen screen screen screen'
    'mut    mut    mut    operators'
    'numpad numpad numpad operators'
    'numpad numpad numpad operators'
    'numpad numpad numpad operators'
    'numpad numpad numpad operators';
  grid-template-rows: repeat(6, minmax(10vh, 1fr));
  grid-template-columns: repeat(4, 1fr);

  & > * {
    border-radius: 1rem;
  }

  &__screen {
    font-size: 2em;
    color: var(--text-inverse);
    background: var(--accent-screen);
    padding: 0.25em;

    grid-area: screen;
    display: flex;
    align-items: center;
    justify-content: flex-end;
  }

  &__mutators {
    --bg: var(--accent-mutator);
    grid-area: mut;

    @include subgrid(1, 3);
  }

  &__numpad {
    --bg: var(--accent-numpad);
    grid-area: numpad;

    @include subgrid(4, 3);
  }

  &__operators {
    --bg: var(--accent-operator);
    grid-area: operators;

    @include subgrid(5, 1);
  }

  &__item {
    background: var(--bg);
    width: 100%;
    height: 100%;
    border-radius: 25rem;
    color: var(--text);

    &-double {
      grid-column: span 2;
    }

    &:hover {
      transform: scale(1.1);
      filter: brightness(115%);
      cursor: pointer;
    }
  }
}
